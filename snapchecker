#!/usr/bin/env python

# This script looks at the contents of the file ‘snaps’, which is assumed to be a list of all zfs snapshots output in order of their creation. It can be generated by:
#    zfs list -H -r -t snapshot -s creation -o name zfsbackups | egrep ‘^zfsbackups/*@zfs-auto-snap_daily-‘ > snaps
# No attempt is made to check that the snapshots are part of a single zfs-snapshot type, so the egrep is important

import csv
from datetime import datetime, timedelta

IFNAME=‘snaps’
OFNAME=‘outfile’
MAXDAYS=30

snaps={}
with open(IFNAME) as f:
    r = csv.reader(f,delimiter='\t')
    for line in r:
        name,snapshot=line[0].split('@')
        print "name is %s, snapshot is %s" % (name,snapshot)
        if name not in snaps.keys():
            snaps[name] = []
    snaps[name].append(snapshot)

# Sort the list of snapshot keys
snapkeys = snap.keys()
snapkeys.sort()

# Generate list of all snapshots older than the last 30
purgelist=[]
for ds in snapkeys:
    print "%s has %d snapshots" % (ds, len(snaps[ds]))
    nsnaps=len(snaps[ds])
    if nsnaps > 30:
        purgeuntil = nsnaps - 30 - 1
        print "need to purge %d snapshots" % (purgeuntil + 1)
        for snapname in snaps[ds][0:purgeuntil]:
            purgeme="%s@%s" % (ds, snapname)
            purgelist.append(purgeme)

# Old snapshot checks
for ds in snapkeys:
    ls = snaps[ds][-1]
    lsd = ls.replace('zfs-auto-snap_daily-','')
    dt=datetime.strptime(lsd, '%Y-%m-%d-%H%M')
    d = timedelta(days=MAXDAYS)
    if datetime.now() - dt > d:
        print "%s@%s is older than %n days" % (ds,ls,MAXDAYS)

# Write out purgelist
with open(OFNAME,’w’) as of:
    for item in purgelist:
        print >>of, item